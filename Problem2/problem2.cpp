//Problem #2: Even Fibonacci numbers
//Description: Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
//1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
//Output: find the sum of the even-valued terms in the Fibonacci sequence whose values do not exceed four million

#include <iostream>

int main()
{
    const int FIB_MAX = 4000000;    //End point for Fibonacci sequence summing, defined in problem #2
    int sum = 0;                    //used to calculate sum of even-valued Fibonacci numbers
    int prev = 1;                   //used to keep track of previous Fibonacci number
    int term = 1;                   //used to keep track of current Fibonacci number
    int temp;                       //used to temporarily store Fibonacci number to then update prev

    while(term + prev < FIB_MAX)    //while Fibonacci number is less than four million
    {
        temp = term;                //store term value in temp
        term += prev;               //add previous value to term to get next Fibonacci number
        prev = temp;                //update prev with new previous value

        if(term % 2 == 0)           //if even
            sum += term;            //add to sum if even Fibonacci number
    }

    std::cout << sum << std::endl;
    return sum;
}